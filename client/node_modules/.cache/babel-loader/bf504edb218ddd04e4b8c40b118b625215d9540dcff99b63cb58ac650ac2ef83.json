{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beshoy\\\\Documents\\\\GitHub\\\\Bnoni-Sway-Website\\\\client\\\\src\\\\components\\\\ConfirmCode\\\\InputCode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputCode = ({\n  length,\n  label,\n  loading,\n  onComplete\n}) => {\n  _s();\n  const [code, setCode] = useState([...Array(length)].map(() => \"\"));\n  const inputs = useRef([]);\n  const processInput = (e, slot) => {\n    const num = e.target.value;\n    if (/[^0-9]/.test(num)) return;\n    const newCode = [...code];\n    newCode[slot] = num;\n    setCode(newCode);\n    if (slot !== length - 1) {\n      inputs.current[slot + 1].focus();\n    }\n    if (newCode.every(num => num !== \"\")) {\n      onComplete(newCode.join(\"\"));\n    }\n  };\n  const onKeyUp = (e, slot) => {\n    if (e.keyCode === 8 && !code[slot] && slot !== 0) {\n      const newCode = [...code];\n      newCode[slot - 1] = \"\";\n      setCode(newCode);\n      inputs.current[slot - 1].focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"code-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-inputs\",\n      children: code.map((num, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          inputMode: \"numeric\",\n          maxLength: 1,\n          value: num,\n          autoFocus: !code[0].length && idx === 0,\n          readOnly: loading,\n          onChange: e => processInput(e, idx),\n          onKeyUp: e => onKeyUp(e, idx),\n          ref: ref => inputs.current.push(ref)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(InputCode, \"uTdd2GS92cFxCOoQzM8NGXF9DUc=\");\n_c = InputCode;\nexport default InputCode;\nvar _c;\n$RefreshReg$(_c, \"InputCode\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","InputCode","length","label","loading","onComplete","_s","code","setCode","Array","map","inputs","processInput","e","slot","num","target","value","test","newCode","current","focus","every","join","onKeyUp","keyCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","type","inputMode","maxLength","autoFocus","readOnly","onChange","ref","push","_c","$RefreshReg$"],"sources":["C:/Users/beshoy/Documents/GitHub/Bnoni-Sway-Website/client/src/components/ConfirmCode/InputCode.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst InputCode = ({ length, label, loading, onComplete }) => {\r\n  const [code, setCode] = useState([...Array(length)].map(() => \"\"));\r\n  const inputs = useRef([]);\r\n\r\n  const processInput = (e, slot) => {\r\n    const num = e.target.value;\r\n    if (/[^0-9]/.test(num)) return;\r\n    const newCode = [...code];\r\n    newCode[slot] = num;\r\n    setCode(newCode);\r\n    if (slot !== length - 1) {\r\n      inputs.current[slot + 1].focus();\r\n    }\r\n    if (newCode.every((num) => num !== \"\")) {\r\n      onComplete(newCode.join(\"\"));\r\n    }\r\n  };\r\n  const onKeyUp = (e, slot) => {\r\n    if (e.keyCode === 8 && !code[slot] && slot !== 0) {\r\n      const newCode = [...code];\r\n      newCode[slot - 1] = \"\";\r\n      setCode(newCode);\r\n      inputs.current[slot - 1].focus();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"code-input\">\r\n      <label className=\"code-label\">{label}</label>\r\n      <div className=\"code-inputs\">\r\n        {code.map((num, idx) => {\r\n          return (\r\n            <input\r\n              key={idx}\r\n              type=\"text\"\r\n              inputMode=\"numeric\"\r\n              maxLength={1}\r\n              value={num}\r\n              autoFocus={!code[0].length && idx === 0}\r\n              readOnly={loading}\r\n              onChange={(e) => processInput(e, idx)}\r\n              onKeyUp={(e) => onKeyUp(e, idx)}\r\n              ref={(ref) => inputs.current.push(ref)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputCode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}