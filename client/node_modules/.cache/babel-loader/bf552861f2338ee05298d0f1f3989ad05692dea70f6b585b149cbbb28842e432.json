{"ast":null,"code":"var _jsxFileName = \"F:\\\\depi React Course\\\\Depi Graduation project\\\\Bnoni-Sway-Website\\\\client\\\\src\\\\components\\\\ProductForStripe\\\\productforstripe.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51Q9Vk62M98qASWQqc6u7n5Br3p6QrHcc1lwFHR4Z8AdGs6vbE3QBdE55uFgTxpnLY3D6xvlgYw6A8DrlqWynFMFL00OoSAg4i0'); // Replace with your public Stripe key\n\nconst ProductComponent = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const handlePayment = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const allowedOrigins = ['http://localhost:3000', 'http://localhost:3001'];\n    const cardElement = elements.getElement(CardElement);\n\n    // Fetch the client secret from your server\n    const response = await fetch('http://localhost:3001/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 3000\n      }) // Amount in cents (e.g., $20.00)\n    });\n    const {\n      clientSecret\n    } = await response.json();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardElement\n      }\n    });\n    if (error) {\n      console.error('Error confirming payment:', error);\n    } else {\n      console.log('Payment successful:', paymentMethod);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Price: $XX.XX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePayment,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductComponent, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = ProductComponent;\nexport default ProductComponent;\nvar _c;\n$RefreshReg$(_c, \"ProductComponent\");","map":{"version":3,"names":["React","loadStripe","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","ProductComponent","_s","stripe","elements","handlePayment","event","preventDefault","allowedOrigins","cardElement","getElement","response","fetch","method","headers","body","JSON","stringify","amount","clientSecret","json","error","paymentMethod","confirmCardPayment","payment_method","card","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","_c","$RefreshReg$"],"sources":["F:/depi React Course/Depi Graduation project/Bnoni-Sway-Website/client/src/components/ProductForStripe/productforstripe.jsx"],"sourcesContent":["import React from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\nconst stripePromise = loadStripe('pk_test_51Q9Vk62M98qASWQqc6u7n5Br3p6QrHcc1lwFHR4Z8AdGs6vbE3QBdE55uFgTxpnLY3D6xvlgYw6A8DrlqWynFMFL00OoSAg4i0'); // Replace with your public Stripe key\r\n\r\nconst ProductComponent = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handlePayment = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n  \r\nconst allowedOrigins = ['http://localhost:3000', 'http://localhost:3001'];\r\n    const cardElement = elements.getElement(CardElement);\r\n  \r\n    // Fetch the client secret from your server\r\n    const response = await fetch('http://localhost:3001/create-payment-intent', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ amount: 3000 }), // Amount in cents (e.g., $20.00)\r\n    });\r\n    const { clientSecret } = await response.json();\r\n  \r\n    const { error, paymentMethod } = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: cardElement,\r\n      },\r\n    });\r\n  \r\n    if (error) {\r\n      console.error('Error confirming payment:', error);\r\n    } else {\r\n      console.log('Payment successful:', paymentMethod);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Product Title</h2>\r\n      <p>Product Description</p>\r\n      <p>Price: $XX.XX</p>\r\n      <form onSubmit={handlePayment}>\r\n        <CardElement />\r\n        <button type=\"submit\" disabled={!stripe}>\r\n          Pay\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,aAAa,GAAGN,UAAU,CAAC,6GAA6G,CAAC,CAAC,CAAC;;AAEjJ,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAG,MAAOC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;IACF;IAEJ,MAAMI,cAAc,GAAG,CAAC,uBAAuB,EAAE,uBAAuB,CAAC;IACrE,MAAMC,WAAW,GAAGL,QAAQ,CAACM,UAAU,CAACf,WAAW,CAAC;;IAEpD;IACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAC,CAAC,CAAE;IAC1C,CAAC,CAAC;IACF,MAAM;MAAEC;IAAa,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAE9C,MAAM;MAAEC,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMnB,MAAM,CAACoB,kBAAkB,CAACJ,YAAY,EAAE;MAC7EK,cAAc,EAAE;QACdC,IAAI,EAAEhB;MACR;IACF,CAAC,CAAC;IAEF,IAAIY,KAAK,EAAE;MACTK,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,MAAM;MACLK,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,aAAa,CAAC;IACnD;EACF,CAAC;EAGD,oBACEvB,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjC,OAAA;MAAA6B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1BjC,OAAA;MAAA6B,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpBjC,OAAA;MAAMkC,QAAQ,EAAE5B,aAAc;MAAAuB,QAAA,gBAC5B7B,OAAA,CAACJ,WAAW;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAE,CAAChC,MAAO;QAAAyB,QAAA,EAAC;MAEzC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDID,gBAAgB;EAAA,QACLL,SAAS,EACPC,WAAW;AAAA;AAAAuC,EAAA,GAFxBnC,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}